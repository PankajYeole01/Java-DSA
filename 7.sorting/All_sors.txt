import java.util.Collections;
import java.util.Arrays;

public class Main{
    public static void main(String args[]){
        Integer arr[]={2,4,5,6,7};
       
        /*Arrays.sort(arr,0,2,Collections.reverseOrder());
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]+" ");
        }
         System.out.println();
        Arrays.sort(arr,0,5);
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]+" ");
        }*/
        bubble_sort(arr);
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]+" ");
        }
    }
    
    public static void bubble_sort(Integer arr[]){
        for(int i=0;i<arr.length-1;i++){
            int swap =0;
            for(int j=0;j<arr.length-i-1;j++){
                if(arr[j]>arr[j+1]){
                    int temp = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1]=temp;
                    swap++;
                }
            }
            if (swap == 0){
                break;
            }
        }
    }
    public static void selection_sort(int arr[]){
        for(int i=0;i<arr.length;i++){
            int minpos=i;
            for(int j=i+1;j<arr.length;j++){
                if(arr[j]<arr[minpos]){
                    minpos = j;
                    
                }
            }
            if (minpos != i){
                int temp = arr[minpos];
                arr[minpos]=arr[i];
                arr[i]=temp;
            }
        }
    }
    public static void insertion_sort(int arr[]){
        for(int i=1;i<arr.length;i++){
            int current = arr[i];
            int prev=i-1;
            while(prev>=0 && arr[prev]>current){
                arr[prev+1]=arr[prev];
                prev--;
            }
            arr[prev+1]=current;
        }
    }
    
    
    public static void counting_sort(int arr[]){
        int largest = Integer.MIN_VALUE;
        for(int i=0;i<arr.length;i++){
            largest = Math.max(largest,arr[i]);
        }
        int count[]=new int[largest+1];
        for(int i=0;i<arr.length;i++){
            count[arr[i]]++;
        }
        for(int i=0;i<count.length;i++){
            int j=0;
            while(count[i]>0){
                arr[j]= i;
                j++;
                count[i]--;
            }
        }
    }
}
